{"ast":null,"code":"import { ref, onMounted, watch } from \"vue\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const theme = ref(getInitialTheme());\n    function toggleTheme() {\n      if (theme.value === \"light-theme\") {\n        theme.value = \"dark-theme\";\n      } else if (theme.value === \"dark-theme\") {\n        theme.value = \"system-theme\";\n      } else {\n        theme.value = \"light-theme\";\n      }\n      if (theme.value === \"system-theme\") {\n        localStorage.removeItem(\"theme\");\n        applySystemTheme();\n      } else {\n        localStorage.setItem(\"theme\", theme.value);\n        document.documentElement.setAttribute(\"data-theme\", theme.value);\n      }\n    }\n    function getInitialTheme() {\n      const storedTheme = localStorage.getItem(\"theme\");\n      if (storedTheme) return storedTheme;\n      return \"system-theme\";\n    }\n    function applySystemTheme() {\n      const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n      const systemTheme = prefersDark ? \"dark-theme\" : \"light-theme\";\n      document.documentElement.setAttribute(\"data-theme\", systemTheme);\n    }\n    function handleSystemThemeChange(event) {\n      if (theme.value === \"system-theme\") {\n        applySystemTheme();\n      }\n    }\n    function getThemeIcon() {\n      if (theme.value === \"light-theme\") return \"bi bi-sun-fill\";\n      if (theme.value === \"dark-theme\") return \"bi bi-moon-fill\";\n      return \"bi bi-laptop\"; // System theme icon\n    }\n\n    // Watch for system theme changes\n    onMounted(() => {\n      if (theme.value === \"system-theme\") {\n        applySystemTheme();\n      } else {\n        document.documentElement.setAttribute(\"data-theme\", theme.value);\n      }\n      window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handleSystemThemeChange);\n    });\n    watch(theme, newTheme => {\n      if (newTheme === \"system-theme\") {\n        applySystemTheme();\n      }\n    });\n    const __returned__ = {\n      theme,\n      toggleTheme,\n      getInitialTheme,\n      applySystemTheme,\n      handleSystemThemeChange,\n      getThemeIcon,\n      ref,\n      onMounted,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","theme","getInitialTheme","toggleTheme","value","localStorage","removeItem","applySystemTheme","setItem","document","documentElement","setAttribute","storedTheme","getItem","prefersDark","window","matchMedia","matches","systemTheme","handleSystemThemeChange","event","getThemeIcon","addEventListener","newTheme"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :class=\"theme\">\n    <HeaderComponent :theme=\"theme\" @toggle-theme=\"toggleTheme\" />\n    <main class=\"content\">\n      <router-view :theme=\"theme\" />\n    </main>\n    <FooterComponent />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\n\nconst theme = ref(getInitialTheme());\n\nfunction toggleTheme() {\n  if (theme.value === \"light-theme\") {\n    theme.value = \"dark-theme\";\n  } else if (theme.value === \"dark-theme\") {\n    theme.value = \"system-theme\";\n  } else {\n    theme.value = \"light-theme\";\n  }\n\n  if (theme.value === \"system-theme\") {\n    localStorage.removeItem(\"theme\");\n    applySystemTheme();\n  } else {\n    localStorage.setItem(\"theme\", theme.value);\n    document.documentElement.setAttribute(\"data-theme\", theme.value);\n  }\n}\n\nfunction getInitialTheme() {\n  const storedTheme = localStorage.getItem(\"theme\");\n  if (storedTheme) return storedTheme;\n  return \"system-theme\";\n}\n\nfunction applySystemTheme() {\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const systemTheme = prefersDark ? \"dark-theme\" : \"light-theme\";\n  document.documentElement.setAttribute(\"data-theme\", systemTheme);\n}\n\nfunction handleSystemThemeChange(event) {\n  if (theme.value === \"system-theme\") {\n    applySystemTheme();\n  }\n}\n\nfunction getThemeIcon() {\n  if (theme.value === \"light-theme\") return \"bi bi-sun-fill\";\n  if (theme.value === \"dark-theme\") return \"bi bi-moon-fill\";\n  return \"bi bi-laptop\"; // System theme icon\n}\n\n// Watch for system theme changes\nonMounted(() => {\n  if (theme.value === \"system-theme\") {\n    applySystemTheme();\n  } else {\n    document.documentElement.setAttribute(\"data-theme\", theme.value);\n  }\n\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handleSystemThemeChange);\n});\n\nwatch(theme, (newTheme) => {\n  if (newTheme === \"system-theme\") {\n    applySystemTheme();\n  }\n});\n</script>\n\n<style>\n/* Define default (light) theme variables */\n:root {\n  --bg-color: #ffffff;\n  --text-color: #000000;\n  --header-bg: #f8f9fa;\n  --footer-bg: #f8f9fa;\n  --btn-bg: #007bff;\n  --btn-text: #ffffff;\n}\n\n/* Dark theme variables */\n[data-theme=\"dark-theme\"] {\n  --bg-color: #121212;\n  --text-color: #ffffff;\n  --header-bg: #212529;\n  --footer-bg: #212529;\n  --btn-bg: #ff9800;\n  --btn-text: #000000;\n}\n.table {\n  background-color: var(--table-bg) !important;\n  color: var(--table-text) !important;\n  transition: background-color 0.3s, color 0.3s;\n}\n/* Apply global styles */\nbody {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  transition: background-color 0.3s, color 0.3s;\n}\n\n.header, .footer {\n  background-color: var(--header-bg);\n}\n\nbutton {\n  background-color: var(--btn-bg);\n  color: var(--btn-text);\n}\n/* Make the footer sticky */\n.app-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh; /* Full viewport height */\n}\n.content {\n  flex: 1; /* Pushes the footer down */\n}\n.footer {\n  width: 100%;\n  background-color: var(--footer-bg);\n  color: var(--text-color);\n  text-align: center;\n  padding: 10px 0;\n}\n</style>\n"],"mappings":"AAWA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;;;;;;;IAE3C,MAAMC,KAAK,GAAGH,GAAG,CAACI,eAAe,CAAC,CAAC,CAAC;IAEpC,SAASC,WAAWA,CAAA,EAAG;MACrB,IAAIF,KAAK,CAACG,KAAK,KAAK,aAAa,EAAE;QACjCH,KAAK,CAACG,KAAK,GAAG,YAAY;MAC5B,CAAC,MAAM,IAAIH,KAAK,CAACG,KAAK,KAAK,YAAY,EAAE;QACvCH,KAAK,CAACG,KAAK,GAAG,cAAc;MAC9B,CAAC,MAAM;QACLH,KAAK,CAACG,KAAK,GAAG,aAAa;MAC7B;MAEA,IAAIH,KAAK,CAACG,KAAK,KAAK,cAAc,EAAE;QAClCC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChCC,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACLF,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEP,KAAK,CAACG,KAAK,CAAC;QAC1CK,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEV,KAAK,CAACG,KAAK,CAAC;MAClE;IACF;IAEA,SAASF,eAAeA,CAAA,EAAG;MACzB,MAAMU,WAAW,GAAGP,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;MACjD,IAAID,WAAW,EAAE,OAAOA,WAAW;MACnC,OAAO,cAAc;IACvB;IAEA,SAASL,gBAAgBA,CAAA,EAAG;MAC1B,MAAMO,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAC7E,MAAMC,WAAW,GAAGJ,WAAW,GAAG,YAAY,GAAG,aAAa;MAC9DL,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEO,WAAW,CAAC;IAClE;IAEA,SAASC,uBAAuBA,CAACC,KAAK,EAAE;MACtC,IAAInB,KAAK,CAACG,KAAK,KAAK,cAAc,EAAE;QAClCG,gBAAgB,CAAC,CAAC;MACpB;IACF;IAEA,SAASc,YAAYA,CAAA,EAAG;MACtB,IAAIpB,KAAK,CAACG,KAAK,KAAK,aAAa,EAAE,OAAO,gBAAgB;MAC1D,IAAIH,KAAK,CAACG,KAAK,KAAK,YAAY,EAAE,OAAO,iBAAiB;MAC1D,OAAO,cAAc,CAAC,CAAC;IACzB;;IAEA;IACAL,SAAS,CAAC,MAAM;MACd,IAAIE,KAAK,CAACG,KAAK,KAAK,cAAc,EAAE;QAClCG,gBAAgB,CAAC,CAAC;MACpB,CAAC,MAAM;QACLE,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEV,KAAK,CAACG,KAAK,CAAC;MAClE;MAEAW,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACM,gBAAgB,CAAC,QAAQ,EAAEH,uBAAuB,CAAC;IACvG,CAAC,CAAC;IAEFnB,KAAK,CAACC,KAAK,EAAGsB,QAAQ,IAAK;MACzB,IAAIA,QAAQ,KAAK,cAAc,EAAE;QAC/BhB,gBAAgB,CAAC,CAAC;MACpB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}