{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"text-red-500\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"p-4 border rounded-lg shadow-md bg-white\"\n};\nconst _hoisted_4 = {\n  class: \"text-xl font-semibold\"\n};\nconst _hoisted_5 = {\n  class: \"text-gray-500\"\n};\nconst _hoisted_6 = {\n  class: \"grid grid-cols-2 gap-4 mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($setup.companyOverview.name) + \" (\" + _toDisplayString($setup.companyOverview.symbol) + \")\", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.companyOverview.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Sector:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.sector), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Industry:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.industry), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Asset Type:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.assetType), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Market Cap:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.marketCapitalization), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"EBITDA:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.ebitda), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Address:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.address), 1 /* TEXT */)])])]));\n}","map":{"version":3,"names":["key","class","$setup","loading","_createElementBlock","_hoisted_1","error","_hoisted_2","_toDisplayString","_hoisted_3","_createElementVNode","_hoisted_4","companyOverview","name","symbol","_hoisted_5","description","_hoisted_6","_createTextVNode","sector","industry","assetType","marketCapitalization","ebitda","address"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/CompanyOverview.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, defineProps } from \"vue\";\n\nconst props = defineProps({\n  symbol: String, // The stock symbol to fetch data for\n});\n\nconst companyOverview = ref(null);\nconst loading = ref(true);\nconst error = ref(null);\n\n// Mock Data\nconst mockData = {\n  symbol: \"AAPL\",\n  assetType: \"Stock\",\n  name: \"Apple Inc.\",\n  description: \"International Business Machines Corporation (IBM) is an American multinational technology company headquartered in Armonk, New York, with operations in over 170 countries. The company began in 1911, founded in Endicott, New York, as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM is incorporated in New York. IBM produces and sells computer hardware, middleware and software, and provides hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most annual U.S. patents generated by a business (as of 2020) for 28 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM). The IBM mainframe, exemplified by the System/360, was the dominant computing platform during the 1960s and 1970s.\",\n  sector: \"Technology\",\n  industry: \"Consumer Electronics\",\n  address: \"One Apple Park Way, Cupertino, CA\",\n  marketCapitalization: \"2.5T\",\n  ebitda: \"110B\",\n};\nconst fetchCompanyOverview = async () => {\n  try {\n    loading.value = true;\n    const response = await axios.get(`http://localhost:3000/stocks/company-overview/${props.symbol}`);\n    companyOverview.value = response.data;\n  } catch (err) {\n    error.value = \"Failed to fetch company overview.\";\n  } finally {\n    loading.value = false;\n  }\n};\n// const fetchCompanyOverview = async () => {\n//   try {\n//     loading.value = true;\n\n//     // Simulate an API delay\n//     await new Promise((resolve) => setTimeout(resolve, 1000));\n\n//     // Use mock data instead of an API call\n//     companyOverview.value = mockData;\n//   } catch (err) {\n//     error.value = \"Failed to fetch company overview.\";\n//   } finally {\n//     loading.value = false;\n//   }\n// };\n\nonMounted(fetchCompanyOverview);\n</script>\n\n<template>\n  <div v-if=\"loading\" class=\"text-center\">Loading...</div>\n  <div v-else-if=\"error\" class=\"text-red-500\">{{ error }}</div>\n  <div v-else class=\"p-4 border rounded-lg shadow-md bg-white\">\n    <h2 class=\"text-xl font-semibold\">{{ companyOverview.name }} ({{ companyOverview.symbol }})</h2>\n    <p class=\"text-gray-500\">{{ companyOverview.description }}</p>\n\n    <div class=\"grid grid-cols-2 gap-4 mt-4\">\n      <div><strong>Sector:</strong> {{ companyOverview.sector }}</div>\n      <div><strong>Industry:</strong> {{ companyOverview.industry }}</div>\n      <div><strong>Asset Type:</strong> {{ companyOverview.assetType }}</div>\n      <div><strong>Market Cap:</strong> {{ companyOverview.marketCapitalization }}</div>\n      <div><strong>EBITDA:</strong> {{ companyOverview.ebitda }}</div>\n      <div><strong>Address:</strong> {{ companyOverview.address }}</div>\n    </div>\n  </div>\n</template>\n"],"mappings":";;EAAAA,GAAA;EAsDsBC,KAAK,EAAC;;;EAtD5BD,GAAA;EAuDyBC,KAAK,EAAC;;;EAvD/BD,GAAA;EAwDcC,KAAK,EAAC;;;EACZA,KAAK,EAAC;AAAuB;;EAC9BA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAA6B;;SAN/BC,MAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAAwD,OAAxDC,UAAwD,EAAhB,YAAU,KAClCH,MAAA,CAAAI,KAAK,I,cAArBF,mBAAA,CAA6D,OAA7DG,UAA6D,EAAAC,gBAAA,CAAdN,MAAA,CAAAI,KAAK,qB,cACpDF,mBAAA,CAYM,OAZNK,UAYM,GAXJC,mBAAA,CAAgG,MAAhGC,UAAgG,EAAAH,gBAAA,CAA3DN,MAAA,CAAAU,eAAe,CAACC,IAAI,IAAG,IAAE,GAAAL,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACE,MAAM,IAAG,GAAC,iBAC3FJ,mBAAA,CAA8D,KAA9DK,UAA8D,EAAAP,gBAAA,CAAlCN,MAAA,CAAAU,eAAe,CAACI,WAAW,kBAEvDN,mBAAA,CAOM,OAPNO,UAOM,GANJP,mBAAA,CAAgE,c,0BAA3DA,mBAAA,CAAwB,gBAAhB,SAAO,sBA7D1BQ,gBAAA,CA6DmC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACO,MAAM,iB,GACvDT,mBAAA,CAAoE,c,0BAA/DA,mBAAA,CAA0B,gBAAlB,WAAS,sBA9D5BQ,gBAAA,CA8DqC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACQ,QAAQ,iB,GAC3DV,mBAAA,CAAuE,c,0BAAlEA,mBAAA,CAA4B,gBAApB,aAAW,sBA/D9BQ,gBAAA,CA+DuC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACS,SAAS,iB,GAC9DX,mBAAA,CAAkF,c,0BAA7EA,mBAAA,CAA4B,gBAApB,aAAW,sBAhE9BQ,gBAAA,CAgEuC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACU,oBAAoB,iB,GACzEZ,mBAAA,CAAgE,c,0BAA3DA,mBAAA,CAAwB,gBAAhB,SAAO,sBAjE1BQ,gBAAA,CAiEmC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACW,MAAM,iB,GACvDb,mBAAA,CAAkE,c,0BAA7DA,mBAAA,CAAyB,gBAAjB,UAAQ,sBAlE3BQ,gBAAA,CAkEoC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACY,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}