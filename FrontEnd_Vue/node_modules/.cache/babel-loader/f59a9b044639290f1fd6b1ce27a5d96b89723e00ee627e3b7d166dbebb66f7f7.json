{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from \"axios\";\nimport { Bar, Line } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale } from \"chart.js\";\n\n// Register necessary components\nChartJS.register(Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    Bar,\n    Line\n  },\n  props: {\n    symbol: String\n  },\n  setup(props) {\n    const closeChartData = ref(null);\n    const highChartData = ref(null);\n    async function fetchIntradayData() {\n      try {\n        const response = await axios.get(`http://localhost:3000/stocks/intraday?symbol=${props.symbol}&interval=60min`);\n\n        // Format the data for Close price (Bar chart)\n        closeChartData.value = {\n          labels: response.data.map(item => item.timestamp),\n          // X-axis labels (timestamps)\n          datasets: [{\n            label: \"Stock Close (60min Interval)\",\n            data: response.data.map(item => parseFloat(item.close)),\n            // Close price\n            backgroundColor: \"rgba(0,123,255,0.6)\" // Bar color\n          }]\n        };\n\n        // Format the data for High price (Line chart)\n        highChartData.value = {\n          labels: response.data.map(item => item.timestamp),\n          // X-axis labels (timestamps)\n          datasets: [{\n            label: \"Stock High (60min Interval)\",\n            data: response.data.map(item => parseFloat(item.high)),\n            // High price\n            borderColor: \"rgba(255,99,132,1)\",\n            // Line color\n            backgroundColor: \"rgba(255,99,132,0.2)\",\n            // Transparent line fill\n            fill: true // Fill under the line\n          }]\n        };\n      } catch (error) {\n        console.error(\"Error fetching intraday data:\", error);\n      }\n    }\n\n    // Watch for symbol changes and fetch new data\n    watch(() => props.symbol, newSymbol => {\n      fetchIntradayData();\n    });\n\n    // Fetch data on component mount\n    onMounted(fetchIntradayData);\n    return {\n      closeChartData,\n      highChartData,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: true\n      }\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","axios","Bar","Line","Chart","ChartJS","Title","Tooltip","Legend","BarElement","LineElement","PointElement","CategoryScale","LinearScale","register","components","props","symbol","String","setup","closeChartData","highChartData","fetchIntradayData","response","get","value","labels","data","map","item","timestamp","datasets","label","parseFloat","close","backgroundColor","high","borderColor","fill","error","console","newSymbol","chartOptions","responsive","maintainAspectRatio"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockIntradayChart.vue"],"sourcesContent":["<template>\n    <div class=\"charts-container\">\n      <!-- Close Price Bar Chart -->\n      <div class=\"chart-container\">\n        <Bar v-if=\"closeChartData\" :data=\"closeChartData\" :options=\"chartOptions\" />\n      </div>\n  \n      <!-- High Price Line Chart -->\n      <div class=\"chart-container\">\n        <Line v-if=\"highChartData\" :data=\"highChartData\" :options=\"chartOptions\" />\n      </div>\n    </div>\n  </template>\n  \n  <script>\n import { ref, onMounted, watch } from \"vue\";\nimport axios from \"axios\";\nimport { Bar, Line } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale } from \"chart.js\";\n\n// Register necessary components\nChartJS.register(Title, Tooltip, Legend, BarElement, LineElement, PointElement, CategoryScale, LinearScale);\n\nexport default {\n  components: { Bar, Line },\n  props: {\n    symbol: String,\n  },\n  setup(props) {\n    const closeChartData = ref(null);\n    const highChartData = ref(null);\n\n    async function fetchIntradayData() {\n      try {\n        const response = await axios.get(`http://localhost:3000/stocks/intraday?symbol=${props.symbol}&interval=60min`);\n\n        // Format the data for Close price (Bar chart)\n        closeChartData.value = {\n          labels: response.data.map(item => item.timestamp), // X-axis labels (timestamps)\n          datasets: [\n            {\n              label: \"Stock Close (60min Interval)\",\n              data: response.data.map(item => parseFloat(item.close)), // Close price\n              backgroundColor: \"rgba(0,123,255,0.6)\", // Bar color\n            },\n          ],\n        };\n\n        // Format the data for High price (Line chart)\n        highChartData.value = {\n          labels: response.data.map(item => item.timestamp), // X-axis labels (timestamps)\n          datasets: [\n            {\n              label: \"Stock High (60min Interval)\",\n              data: response.data.map(item => parseFloat(item.high)), // High price\n              borderColor: \"rgba(255,99,132,1)\", // Line color\n              backgroundColor: \"rgba(255,99,132,0.2)\", // Transparent line fill\n              fill: true, // Fill under the line\n            },\n          ],\n        };\n\n      } catch (error) {\n        console.error(\"Error fetching intraday data:\", error);\n      }\n    }\n\n    // Watch for symbol changes and fetch new data\n    watch(() => props.symbol, (newSymbol) => {\n      fetchIntradayData();\n    });\n\n    // Fetch data on component mount\n    onMounted(fetchIntradayData);\n\n    return {\n      closeChartData,\n      highChartData,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: true,\n      },\n    };\n  },\n};\n\n  </script>\n  \n  <style scoped>\n  .charts-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px; /* Adds space between the charts */\n  }\n  \n  .chart-container {\n    width: 100%;\n    max-width: 1000px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";;AAeC,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC5C,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,IAAG,QAAS,aAAa;AACvC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa,EAAEC,WAAU,QAAS,UAAU;;AAEtI;AACAR,OAAO,CAACS,QAAQ,CAACR,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAE3G,eAAe;EACbE,UAAU,EAAE;IAAEb,GAAG;IAAEC;EAAK,CAAC;EACzBa,KAAK,EAAE;IACLC,MAAM,EAAEC;EACV,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAMI,cAAa,GAAItB,GAAG,CAAC,IAAI,CAAC;IAChC,MAAMuB,aAAY,GAAIvB,GAAG,CAAC,IAAI,CAAC;IAE/B,eAAewB,iBAAiBA,CAAA,EAAG;MACjC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAC,gDAAgDR,KAAK,CAACC,MAAM,iBAAiB,CAAC;;QAE/G;QACAG,cAAc,CAACK,KAAI,GAAI;UACrBC,MAAM,EAAEH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC;UAAE;UACnDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,8BAA8B;YACrCL,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKI,UAAU,CAACJ,IAAI,CAACK,KAAK,CAAC,CAAC;YAAE;YACzDC,eAAe,EAAE,qBAAqB,CAAE;UAC1C,CAAC;QAEL,CAAC;;QAED;QACAd,aAAa,CAACI,KAAI,GAAI;UACpBC,MAAM,EAAEH,QAAQ,CAACI,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC;UAAE;UACnDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,6BAA6B;YACpCL,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKI,UAAU,CAACJ,IAAI,CAACO,IAAI,CAAC,CAAC;YAAE;YACxDC,WAAW,EAAE,oBAAoB;YAAE;YACnCF,eAAe,EAAE,sBAAsB;YAAE;YACzCG,IAAI,EAAE,IAAI,CAAE;UACd,CAAC;QAEL,CAAC;MAEH,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;;IAEA;IACAvC,KAAK,CAAC,MAAMgB,KAAK,CAACC,MAAM,EAAGwB,SAAS,IAAK;MACvCnB,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC;;IAEF;IACAvB,SAAS,CAACuB,iBAAiB,CAAC;IAE5B,OAAO;MACLF,cAAc;MACdC,aAAa;MACbqB,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}