{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nexport default {\n  __name: 'CompanyOverview',\n  props: {\n    symbol: String // The stock symbol to fetch data for\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const companyOverview = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Mock Data\n    const mockData = {\n      symbol: \"AAPL\",\n      assetType: \"Stock\",\n      name: \"Apple Inc.\",\n      description: \"Apple Inc. designs, manufactures, and sells consumer electronics and software.\",\n      sector: \"Technology\",\n      industry: \"Consumer Electronics\",\n      address: \"One Apple Park Way, Cupertino, CA\",\n      marketCapitalization: \"2.5T\",\n      ebitda: \"110B\"\n    };\n    const fetchCompanyOverview = async () => {\n      try {\n        loading.value = true;\n\n        // Simulate an API delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n\n        // Use mock data instead of an API call\n        companyOverview.value = mockData;\n      } catch (err) {\n        error.value = \"Failed to fetch company overview.\";\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(fetchCompanyOverview);\n    const __returned__ = {\n      props,\n      companyOverview,\n      loading,\n      error,\n      mockData,\n      fetchCompanyOverview,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","props","__props","companyOverview","loading","error","mockData","symbol","assetType","name","description","sector","industry","address","marketCapitalization","ebitda","fetchCompanyOverview","value","Promise","resolve","setTimeout","err"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/CompanyOverview.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted, defineProps } from \"vue\";\n\nconst props = defineProps({\n  symbol: String, // The stock symbol to fetch data for\n});\n\nconst companyOverview = ref(null);\nconst loading = ref(true);\nconst error = ref(null);\n\n// Mock Data\nconst mockData = {\n  symbol: \"AAPL\",\n  assetType: \"Stock\",\n  name: \"Apple Inc.\",\n  description: \"Apple Inc. designs, manufactures, and sells consumer electronics and software.\",\n  sector: \"Technology\",\n  industry: \"Consumer Electronics\",\n  address: \"One Apple Park Way, Cupertino, CA\",\n  marketCapitalization: \"2.5T\",\n  ebitda: \"110B\",\n};\n\nconst fetchCompanyOverview = async () => {\n  try {\n    loading.value = true;\n\n    // Simulate an API delay\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    // Use mock data instead of an API call\n    companyOverview.value = mockData;\n  } catch (err) {\n    error.value = \"Failed to fetch company overview.\";\n  } finally {\n    loading.value = false;\n  }\n};\n\nonMounted(fetchCompanyOverview);\n</script>\n\n<template>\n  <div v-if=\"loading\" class=\"text-center\">Loading...</div>\n  <div v-else-if=\"error\" class=\"text-red-500\">{{ error }}</div>\n  <div v-else class=\"p-4 border rounded-lg shadow-md bg-white\">\n    <h2 class=\"text-xl font-semibold\">{{ companyOverview.name }} ({{ companyOverview.symbol }})</h2>\n    <p class=\"text-gray-500\">{{ companyOverview.description }}</p>\n\n    <div class=\"grid grid-cols-2 gap-4 mt-4\">\n      <div><strong>Sector:</strong> {{ companyOverview.sector }}</div>\n      <div><strong>Industry:</strong> {{ companyOverview.industry }}</div>\n      <div><strong>Asset Type:</strong> {{ companyOverview.assetType }}</div>\n      <div><strong>Market Cap:</strong> {{ companyOverview.marketCapitalization }}</div>\n      <div><strong>EBITDA:</strong> {{ companyOverview.ebitda }}</div>\n      <div><strong>Address:</strong> {{ companyOverview.address }}</div>\n    </div>\n  </div>\n</template>\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAsB,QAAQ,KAAK;;;;;;;;;;IAEjD,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,eAAe,GAAGJ,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMK,OAAO,GAAGL,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMM,KAAK,GAAGN,GAAG,CAAC,IAAI,CAAC;;IAEvB;IACA,MAAMO,QAAQ,GAAG;MACfC,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE,OAAO;MAClBC,IAAI,EAAE,YAAY;MAClBC,WAAW,EAAE,gFAAgF;MAC7FC,MAAM,EAAE,YAAY;MACpBC,QAAQ,EAAE,sBAAsB;MAChCC,OAAO,EAAE,mCAAmC;MAC5CC,oBAAoB,EAAE,MAAM;MAC5BC,MAAM,EAAE;IACV,CAAC;IAED,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACFZ,OAAO,CAACa,KAAK,GAAG,IAAI;;QAEpB;QACA,MAAM,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;;QAEzD;QACAhB,eAAe,CAACc,KAAK,GAAGX,QAAQ;MAClC,CAAC,CAAC,OAAOe,GAAG,EAAE;QACZhB,KAAK,CAACY,KAAK,GAAG,mCAAmC;MACnD,CAAC,SAAS;QACRb,OAAO,CAACa,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAEDjB,SAAS,CAACgB,oBAAoB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}