{"ast":null,"code":"import axios from \"axios\";\nimport { ref, computed, onMounted } from \"vue\";\nexport default {\n  setup() {\n    const etfSymbol = ref(\"QQQ\"); // Default ETF symbol\n    const holdings = ref([]);\n    const currentPage = ref(1);\n    const itemsPerPage = 10; // Show 10 per page\n\n    // Fetch ETF Holdings\n    const fetchHoldings = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/stocks/etf-holdings?symbol=${etfSymbol.value}`);\n        holdings.value = response.data.holdings || [];\n        currentPage.value = 1; // Reset to first page\n      } catch (error) {\n        console.error(\"Error fetching holdings:\", error);\n      }\n    };\n\n    // Pagination Computed Properties\n    const totalPages = computed(() => Math.ceil(holdings.value.length / itemsPerPage));\n    const paginatedHoldings = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      return holdings.value.slice(start, start + itemsPerPage);\n    });\n\n    // Pagination Methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n    const prevPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // View Stock Details (Route to Another Page)\n    const viewStockDetails = symbol => {\n      window.location.href = `/stock/${symbol}`; // Replace with Vue Router if needed\n    };\n\n    // Class for Weight Change (Optional Styling)\n    const getChangeClass = weight => {\n      return parseFloat(weight) >= 0.05 ? \"text-success\" : \"text-danger\";\n    };\n\n    // Fetch data on component mount\n    onMounted(fetchHoldings);\n    return {\n      etfSymbol,\n      holdings,\n      fetchHoldings,\n      paginatedHoldings,\n      currentPage,\n      totalPages,\n      nextPage,\n      prevPage,\n      viewStockDetails,\n      getChangeClass\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","computed","onMounted","setup","etfSymbol","holdings","currentPage","itemsPerPage","fetchHoldings","response","get","value","data","error","console","totalPages","Math","ceil","length","paginatedHoldings","start","slice","nextPage","prevPage","viewStockDetails","symbol","window","location","href","getChangeClass","weight","parseFloat"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2 class=\"text-center mb-4\">Stock Dashboard</h2>\n\n    <!-- ETF Symbol Input -->\n    <div class=\"input-group mb-3\">\n      <input v-model=\"etfSymbol\" class=\"form-control\" placeholder=\"Enter ETF symbol (e.g., QQQ)\" />\n      <button @click=\"fetchHoldings\" class=\"btn btn-primary\">Fetch Holdings</button>\n    </div>\n\n    <!-- Stock Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Description</th>\n            <th>Weight (%)</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"stock in paginatedHoldings\" :key=\"stock.symbol\">\n            <td>{{ stock.symbol }}</td>\n            <td>{{ stock.description }}</td>\n            <td :class=\"getChangeClass(stock.weight)\">\n              {{ parseFloat(stock.weight).toFixed(2) }}%\n            </td>\n            <td>\n              <button @click=\"viewStockDetails(stock.symbol)\" class=\"btn btn-primary\">\n                View Details\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Pagination Controls -->\n    <div class=\"pagination\">\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"btn btn-secondary\">Previous</button>\n      <span>Page {{ currentPage }} of {{ totalPages }}</span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"btn btn-secondary\">Next</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { ref, computed, onMounted } from \"vue\";\n\nexport default {\n  setup() {\n    const etfSymbol = ref(\"QQQ\"); // Default ETF symbol\n    const holdings = ref([]);\n    const currentPage = ref(1);\n    const itemsPerPage = 10; // Show 10 per page\n\n    // Fetch ETF Holdings\n    const fetchHoldings = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/stocks/etf-holdings?symbol=${etfSymbol.value}`);\n        holdings.value = response.data.holdings || [];\n        currentPage.value = 1; // Reset to first page\n      } catch (error) {\n        console.error(\"Error fetching holdings:\", error);\n      }\n    };\n\n    // Pagination Computed Properties\n    const totalPages = computed(() => Math.ceil(holdings.value.length / itemsPerPage));\n\n    const paginatedHoldings = computed(() => {\n      const start = (currentPage.value - 1) * itemsPerPage;\n      return holdings.value.slice(start, start + itemsPerPage);\n    });\n\n    // Pagination Methods\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n      }\n    };\n\n    const prevPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n      }\n    };\n\n    // View Stock Details (Route to Another Page)\n    const viewStockDetails = (symbol) => {\n      window.location.href = `/stock/${symbol}`; // Replace with Vue Router if needed\n    };\n\n    // Class for Weight Change (Optional Styling)\n    const getChangeClass = (weight) => {\n      return parseFloat(weight) >= 0.05 ? \"text-success\" : \"text-danger\";\n    };\n\n    // Fetch data on component mount\n    onMounted(fetchHoldings);\n\n    return {\n      etfSymbol,\n      holdings,\n      fetchHoldings,\n      paginatedHoldings,\n      currentPage,\n      totalPages,\n      nextPage,\n      prevPage,\n      viewStockDetails,\n      getChangeClass,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.table {\n  text-align: center;\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n\n.btn-primary {\n  background-color: var(--btn-bg);\n  color: var(--btn-text);\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.text-success {\n  color: green;\n}\n\n.text-danger {\n  color: red;\n}\n</style>\n"],"mappings":"AAgDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIJ,GAAG,CAAC,KAAK,CAAC,EAAE;IAC9B,MAAMK,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,WAAU,GAAIN,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMO,YAAW,GAAI,EAAE,EAAE;;IAEzB;IACA,MAAMC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,oDAAoDN,SAAS,CAACO,KAAK,EAAE,CAAC;QACvGN,QAAQ,CAACM,KAAI,GAAIF,QAAQ,CAACG,IAAI,CAACP,QAAO,IAAK,EAAE;QAC7CC,WAAW,CAACK,KAAI,GAAI,CAAC,EAAE;MACzB,EAAE,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACA,MAAME,UAAS,GAAId,QAAQ,CAAC,MAAMe,IAAI,CAACC,IAAI,CAACZ,QAAQ,CAACM,KAAK,CAACO,MAAK,GAAIX,YAAY,CAAC,CAAC;IAElF,MAAMY,iBAAgB,GAAIlB,QAAQ,CAAC,MAAM;MACvC,MAAMmB,KAAI,GAAI,CAACd,WAAW,CAACK,KAAI,GAAI,CAAC,IAAIJ,YAAY;MACpD,OAAOF,QAAQ,CAACM,KAAK,CAACU,KAAK,CAACD,KAAK,EAAEA,KAAI,GAAIb,YAAY,CAAC;IAC1D,CAAC,CAAC;;IAEF;IACA,MAAMe,QAAO,GAAIA,CAAA,KAAM;MACrB,IAAIhB,WAAW,CAACK,KAAI,GAAII,UAAU,CAACJ,KAAK,EAAE;QACxCL,WAAW,CAACK,KAAK,EAAE;MACrB;IACF,CAAC;IAED,MAAMY,QAAO,GAAIA,CAAA,KAAM;MACrB,IAAIjB,WAAW,CAACK,KAAI,GAAI,CAAC,EAAE;QACzBL,WAAW,CAACK,KAAK,EAAE;MACrB;IACF,CAAC;;IAED;IACA,MAAMa,gBAAe,GAAKC,MAAM,IAAK;MACnCC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,UAAUH,MAAM,EAAE,EAAE;IAC7C,CAAC;;IAED;IACA,MAAMI,cAAa,GAAKC,MAAM,IAAK;MACjC,OAAOC,UAAU,CAACD,MAAM,KAAK,IAAG,GAAI,cAAa,GAAI,aAAa;IACpE,CAAC;;IAED;IACA5B,SAAS,CAACM,aAAa,CAAC;IAExB,OAAO;MACLJ,SAAS;MACTC,QAAQ;MACRG,aAAa;MACbW,iBAAiB;MACjBb,WAAW;MACXS,UAAU;MACVO,QAAQ;MACRC,QAAQ;MACRC,gBAAgB;MAChBK;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}