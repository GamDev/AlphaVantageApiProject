{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"text-center\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"text-red-500\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"p-4 border rounded-lg shadow-md bg-white\"\n};\nconst _hoisted_4 = {\n  class: \"text-xl font-semibold\"\n};\nconst _hoisted_5 = {\n  class: \"text-gray-500\"\n};\nconst _hoisted_6 = {\n  class: \"grid grid-cols-2 gap-4 mt-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : $setup.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($setup.error), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, _toDisplayString($setup.companyOverview.name) + \" (\" + _toDisplayString($setup.companyOverview.symbol) + \")\", 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_5, _toDisplayString($setup.companyOverview.description), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Sector:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.sector), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Industry:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.industry), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Market Cap:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.marketCapitalization), 1 /* TEXT */)]), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Address:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($setup.companyOverview.address), 1 /* TEXT */)])])]));\n}","map":{"version":3,"names":["key","class","$setup","loading","_createElementBlock","_hoisted_1","error","_hoisted_2","_toDisplayString","_hoisted_3","_createElementVNode","_hoisted_4","companyOverview","name","symbol","_hoisted_5","description","_hoisted_6","_createTextVNode","sector","industry","marketCapitalization","address"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/CompanyOverview.vue"],"sourcesContent":["<template>\n    <div v-if=\"loading\" class=\"text-center\">Loading...</div>\n    <div v-else-if=\"error\" class=\"text-red-500\">{{ error }}</div>\n    <div v-else class=\"p-4 border rounded-lg shadow-md bg-white\">\n      <h2 class=\"text-xl font-semibold\">{{ companyOverview.name }} ({{ companyOverview.symbol }})</h2>\n      <p class=\"text-gray-500\">{{ companyOverview.description }}</p>\n  \n      <div class=\"grid grid-cols-2 gap-4 mt-4\">\n        <div><strong>Sector:</strong> {{ companyOverview.sector }}</div>\n        <div><strong>Industry:</strong> {{ companyOverview.industry }}</div>\n        <div><strong>Market Cap:</strong> {{ companyOverview.marketCapitalization }}</div>\n        <div><strong>Address:</strong> {{ companyOverview.address }}</div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  import axios from \"axios\";\n  import { ref, onMounted, watch, defineProps } from \"vue\";\n  \n  // Props from the parent component\n  const props = defineProps({\n    symbol: String,\n  });\n  \n  const companyOverview = ref(null);\n  const loading = ref(true);\n  const error = ref(null);\n  \n  // Fetch company data based on the symbol\n  const fetchCompanyOverview = async () => {\n    console.log(\"Fetching company overview for symbol:\", props.symbol); // Debugging line\n    try {\n      loading.value = true;\n      const response = await axios.get(`http://localhost:3000/stocks/company?symbol=${props.symbol}`);\n      console.log(\"API Response:\", response.data); // Log the API response\n      companyOverview.value = response.data;\n    } catch (err) {\n      console.error(\"Error fetching data:\", err.response || err.message); // Log the error\n      error.value = \"Failed to fetch company overview.\";\n    } finally {\n      loading.value = false;\n    }\n  };\n  \n  // Watch for changes in the symbol and re-fetch data\n  watch(() => props.symbol, (newSymbol) => {\n    console.log(\"Symbol changed to:\", newSymbol); // Debugging line\n    fetchCompanyOverview();  // Re-fetch data when symbol changes\n  });\n  \n  // Fetch company data when the component is mounted\n  onMounted(() => {\n    console.log(\"Component mounted, calling fetchCompanyOverview\"); // Debugging line\n    fetchCompanyOverview();\n  });\n  </script>\n  \n  <style scoped>\n  /* Your styles here */\n  </style>\n  "],"mappings":";;EAAAA,GAAA;EACwBC,KAAK,EAAC;;;EAD9BD,GAAA;EAE2BC,KAAK,EAAC;;;EAFjCD,GAAA;EAGgBC,KAAK,EAAC;;;EACZA,KAAK,EAAC;AAAuB;;EAC9BA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAA6B;;SAN/BC,MAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAAwD,OAAxDC,UAAwD,EAAhB,YAAU,KAClCH,MAAA,CAAAI,KAAK,I,cAArBF,mBAAA,CAA6D,OAA7DG,UAA6D,EAAAC,gBAAA,CAAdN,MAAA,CAAAI,KAAK,qB,cACpDF,mBAAA,CAUM,OAVNK,UAUM,GATJC,mBAAA,CAAgG,MAAhGC,UAAgG,EAAAH,gBAAA,CAA3DN,MAAA,CAAAU,eAAe,CAACC,IAAI,IAAG,IAAE,GAAAL,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACE,MAAM,IAAG,GAAC,iBAC3FJ,mBAAA,CAA8D,KAA9DK,UAA8D,EAAAP,gBAAA,CAAlCN,MAAA,CAAAU,eAAe,CAACI,WAAW,kBAEvDN,mBAAA,CAKM,OALNO,UAKM,GAJJP,mBAAA,CAAgE,c,0BAA3DA,mBAAA,CAAwB,gBAAhB,SAAO,sBAR5BQ,gBAAA,CAQqC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACO,MAAM,iB,GACvDT,mBAAA,CAAoE,c,0BAA/DA,mBAAA,CAA0B,gBAAlB,WAAS,sBAT9BQ,gBAAA,CASuC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACQ,QAAQ,iB,GAC3DV,mBAAA,CAAkF,c,0BAA7EA,mBAAA,CAA4B,gBAApB,aAAW,sBAVhCQ,gBAAA,CAUyC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACS,oBAAoB,iB,GACzEX,mBAAA,CAAkE,c,0BAA7DA,mBAAA,CAAyB,gBAAjB,UAAQ,sBAX7BQ,gBAAA,CAWsC,GAAC,GAAAV,gBAAA,CAAGN,MAAA,CAAAU,eAAe,CAACU,OAAO,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}