{"ast":null,"code":"import { ref, watch, onMounted } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport BarChart from \"@/components/BarChart.vue\";\nimport CompanyOverview from \"@/components/CompanyOverview.vue\"; // Import the component\n\nexport default {\n  components: {\n    CompanyOverview,\n    BarChart\n  },\n  setup() {\n    const route = useRoute();\n    const stockSymbol = ref(route.params.symbol);\n    const stockData = ref(null);\n    const chartData = ref(null);\n    const marketCapData = ref(null);\n    function fetchStockDetails() {\n      setTimeout(() => {\n        stockData.value = {\n          companyName: \"Example Corp\",\n          price: 150.25,\n          marketCap: 2,\n          // Trillion\n          historicalPrices: [{\n            date: \"Jan\",\n            price: 150\n          }, {\n            date: \"Feb\",\n            price: 155\n          }, {\n            date: \"Mar\",\n            price: 160\n          }, {\n            date: \"Apr\",\n            price: 162\n          }, {\n            date: \"May\",\n            price: 170\n          }]\n        };\n\n        // Bar Chart Data for Market Cap\n        marketCapData.value = {\n          labels: [\"Example Corp\", \"Competitor A\", \"Competitor B\"],\n          datasets: [{\n            label: \"Market Cap (Trillion $)\",\n            data: [stockData.value.marketCap, 1.8, 2.2],\n            backgroundColor: [\"blue\", \"red\", \"green\"]\n          }]\n        };\n      }, 1000);\n    }\n    onMounted(fetchStockDetails);\n    watch(() => route.params.symbol, newSymbol => {\n      stockSymbol.value = newSymbol;\n      fetchStockDetails();\n    });\n    return {\n      stockSymbol,\n      stockData,\n      chartData,\n      marketCapData\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","onMounted","useRoute","BarChart","CompanyOverview","components","setup","route","stockSymbol","params","symbol","stockData","chartData","marketCapData","fetchStockDetails","setTimeout","value","companyName","price","marketCap","historicalPrices","date","labels","datasets","label","data","backgroundColor","newSymbol"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockDetails.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-4\">\n      <h2 class=\"text-center mb-4\">Stock Details: {{ stockSymbol }}</h2>\n  \n      <div v-if=\"stockData\">\n        <h3 class=\"text-center mt-4\">Company Overview</h3>\n      <CompanyOverview :symbol=\"stockSymbol\" />\n        <!-- Bar Chart for Market Cap -->\n        <h3 class=\"text-center mt-4\">Market Cap Comparison</h3>\n        <BarChart v-if=\"marketCapData\" :chart-data=\"marketCapData\" />\n  \n\n      </div>\n  \n      <div v-else class=\"text-center\">\n        <p>Loading stock details...</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { ref, watch, onMounted } from \"vue\";\n  import { useRoute } from \"vue-router\";\n  import BarChart from \"@/components/BarChart.vue\";\n  import CompanyOverview from \"@/components/CompanyOverview.vue\"; // Import the component\n\n  \n  export default {\n    components: { CompanyOverview, BarChart },\n    setup() {\n      const route = useRoute();\n      const stockSymbol = ref(route.params.symbol);\n      const stockData = ref(null);\n      const chartData = ref(null);\n      const marketCapData = ref(null);\n  \n      function fetchStockDetails() {\n        setTimeout(() => {\n          stockData.value = {\n            companyName: \"Example Corp\",\n            price: 150.25,\n            marketCap: 2, // Trillion\n            historicalPrices: [\n              { date: \"Jan\", price: 150 },\n              { date: \"Feb\", price: 155 },\n              { date: \"Mar\", price: 160 },\n              { date: \"Apr\", price: 162 },\n              { date: \"May\", price: 170 },\n            ],\n          };\n  \n        \n  \n          // Bar Chart Data for Market Cap\n          marketCapData.value = {\n            labels: [\"Example Corp\", \"Competitor A\", \"Competitor B\"],\n            datasets: [\n              {\n                label: \"Market Cap (Trillion $)\",\n                data: [stockData.value.marketCap, 1.8, 2.2],\n                backgroundColor: [\"blue\", \"red\", \"green\"],\n              },\n            ],\n          };\n        }, 1000);\n      }\n  \n      onMounted(fetchStockDetails);\n  \n      watch(() => route.params.symbol, (newSymbol) => {\n        stockSymbol.value = newSymbol;\n        fetchStockDetails();\n      });\n  \n      return { stockSymbol, stockData, chartData, marketCapData };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .container {\n    background: var(--bg-color);\n    color: var(--text-color);\n    padding: 20px;\n    border-radius: 10px;\n  }\n  \n  .chart-container {\n    width: 80%;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":"AAqBE,SAASA,GAAG,EAAEC,KAAK,EAAEC,SAAQ,QAAS,KAAK;AAC3C,SAASC,QAAO,QAAS,YAAY;AACrC,OAAOC,QAAO,MAAO,2BAA2B;AAChD,OAAOC,eAAc,MAAO,kCAAkC,EAAE;;AAGhE,eAAe;EACbC,UAAU,EAAE;IAAED,eAAe;IAAED;EAAS,CAAC;EACzCG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,WAAU,GAAIT,GAAG,CAACQ,KAAK,CAACE,MAAM,CAACC,MAAM,CAAC;IAC5C,MAAMC,SAAQ,GAAIZ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMa,SAAQ,GAAIb,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMc,aAAY,GAAId,GAAG,CAAC,IAAI,CAAC;IAE/B,SAASe,iBAAiBA,CAAA,EAAG;MAC3BC,UAAU,CAAC,MAAM;QACfJ,SAAS,CAACK,KAAI,GAAI;UAChBC,WAAW,EAAE,cAAc;UAC3BC,KAAK,EAAE,MAAM;UACbC,SAAS,EAAE,CAAC;UAAE;UACdC,gBAAgB,EAAE,CAChB;YAAEC,IAAI,EAAE,KAAK;YAAEH,KAAK,EAAE;UAAI,CAAC,EAC3B;YAAEG,IAAI,EAAE,KAAK;YAAEH,KAAK,EAAE;UAAI,CAAC,EAC3B;YAAEG,IAAI,EAAE,KAAK;YAAEH,KAAK,EAAE;UAAI,CAAC,EAC3B;YAAEG,IAAI,EAAE,KAAK;YAAEH,KAAK,EAAE;UAAI,CAAC,EAC3B;YAAEG,IAAI,EAAE,KAAK;YAAEH,KAAK,EAAE;UAAI,CAAC;QAE/B,CAAC;;QAID;QACAL,aAAa,CAACG,KAAI,GAAI;UACpBM,MAAM,EAAE,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC;UACxDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,yBAAyB;YAChCC,IAAI,EAAE,CAACd,SAAS,CAACK,KAAK,CAACG,SAAS,EAAE,GAAG,EAAE,GAAG,CAAC;YAC3CO,eAAe,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO;UAC1C,CAAC;QAEL,CAAC;MACH,CAAC,EAAE,IAAI,CAAC;IACV;IAEAzB,SAAS,CAACa,iBAAiB,CAAC;IAE5Bd,KAAK,CAAC,MAAMO,KAAK,CAACE,MAAM,CAACC,MAAM,EAAGiB,SAAS,IAAK;MAC9CnB,WAAW,CAACQ,KAAI,GAAIW,SAAS;MAC7Bb,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO;MAAEN,WAAW;MAAEG,SAAS;MAAEC,SAAS;MAAEC;IAAc,CAAC;EAC7D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}