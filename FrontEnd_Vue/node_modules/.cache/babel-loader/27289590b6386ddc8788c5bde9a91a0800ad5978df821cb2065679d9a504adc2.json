{"ast":null,"code":"import axios from \"axios\";\nimport { ref, onMounted, watch } from \"vue\";\n\n// Props from the parent component\n\nexport default {\n  __name: 'CompanyOverview',\n  props: {\n    symbol: String\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const companyOverview = ref(null);\n    const loading = ref(true);\n    const error = ref(null);\n\n    // Fetch company data based on the symbol\n    const fetchCompanyOverview = async () => {\n      console.log(\"Fetching company overview for symbol:\", props.symbol); // Debugging line\n      try {\n        loading.value = true;\n        const response = await axios.get(`http://localhost:3000/stocks/company?symbol=${props.symbol}`);\n        console.log(\"API Response:\", response.data); // Log the API response\n        companyOverview.value = response.data;\n      } catch (err) {\n        console.error(\"Error fetching data:\", err.response || err.message); // Log the error\n        error.value = \"Failed to fetch company overview.\";\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Watch for changes in the symbol and re-fetch data\n    watch(() => props.symbol, newSymbol => {\n      console.log(\"Symbol changed to:\", newSymbol); // Debugging line\n      fetchCompanyOverview(); // Re-fetch data when symbol changes\n    });\n\n    // Fetch company data when the component is mounted\n    onMounted(() => {\n      console.log(\"Component mounted, calling fetchCompanyOverview\"); // Debugging line\n      fetchCompanyOverview();\n    });\n    const __returned__ = {\n      props,\n      companyOverview,\n      loading,\n      error,\n      fetchCompanyOverview,\n      get axios() {\n        return axios;\n      },\n      ref,\n      onMounted,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","watch","props","__props","companyOverview","loading","error","fetchCompanyOverview","console","log","symbol","value","response","get","data","err","message","newSymbol"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/CompanyOverview.vue"],"sourcesContent":["<template>\n    <div v-if=\"loading\" class=\"text-center\">Loading...</div>\n    <div v-else-if=\"error\" class=\"text-red-500\">{{ error }}</div>\n    <div v-else class=\"p-4 border rounded-lg shadow-md bg-white\">\n      <h2 class=\"text-xl font-semibold\">{{ companyOverview.name }} ({{ companyOverview.symbol }})</h2>\n      <p class=\"text-gray-500\">{{ companyOverview.description }}</p>\n  \n      <div class=\"grid grid-cols-2 gap-4 mt-4\">\n        <div><strong>Sector:</strong> {{ companyOverview.sector }}</div>\n        <div><strong>Industry:</strong> {{ companyOverview.industry }}</div>\n        <div><strong>Market Cap:</strong> {{ companyOverview.marketCapitalization }}</div>\n        <div><strong>Address:</strong> {{ companyOverview.address }}</div>\n      </div>\n    </div>\n  </template>\n  \n  <script setup>\n  import axios from \"axios\";\n  import { ref, onMounted, watch, defineProps } from \"vue\";\n  \n  // Props from the parent component\n  const props = defineProps({\n    symbol: String,\n  });\n  \n  const companyOverview = ref(null);\n  const loading = ref(true);\n  const error = ref(null);\n  \n  // Fetch company data based on the symbol\n  const fetchCompanyOverview = async () => {\n    console.log(\"Fetching company overview for symbol:\", props.symbol); // Debugging line\n    try {\n      loading.value = true;\n      const response = await axios.get(`http://localhost:3000/stocks/company?symbol=${props.symbol}`);\n      console.log(\"API Response:\", response.data); // Log the API response\n      companyOverview.value = response.data;\n    } catch (err) {\n      console.error(\"Error fetching data:\", err.response || err.message); // Log the error\n      error.value = \"Failed to fetch company overview.\";\n    } finally {\n      loading.value = false;\n    }\n  };\n  \n  // Watch for changes in the symbol and re-fetch data\n  watch(() => props.symbol, (newSymbol) => {\n    console.log(\"Symbol changed to:\", newSymbol); // Debugging line\n    fetchCompanyOverview();  // Re-fetch data when symbol changes\n  });\n  \n  // Fetch company data when the component is mounted\n  onMounted(() => {\n    console.log(\"Component mounted, calling fetchCompanyOverview\"); // Debugging line\n    fetchCompanyOverview();\n  });\n  </script>\n  \n  <style scoped>\n  /* Your styles here */\n  </style>\n  "],"mappings":"AAiBE,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,KAAkB,QAAQ,KAAK;;AAExD;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAEZ;IAEF,MAAMC,eAAe,GAAGL,GAAG,CAAC,IAAI,CAAC;IACjC,MAAMM,OAAO,GAAGN,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMO,KAAK,GAAGP,GAAG,CAAC,IAAI,CAAC;;IAEvB;IACA,MAAMQ,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvCC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEP,KAAK,CAACQ,MAAM,CAAC,CAAC,CAAC;MACpE,IAAI;QACFL,OAAO,CAACM,KAAK,GAAG,IAAI;QACpB,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,+CAA+CX,KAAK,CAACQ,MAAM,EAAE,CAAC;QAC/FF,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QAC7CV,eAAe,CAACO,KAAK,GAAGC,QAAQ,CAACE,IAAI;MACvC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZP,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAES,GAAG,CAACH,QAAQ,IAAIG,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC;QACpEV,KAAK,CAACK,KAAK,GAAG,mCAAmC;MACnD,CAAC,SAAS;QACRN,OAAO,CAACM,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACAV,KAAK,CAAC,MAAMC,KAAK,CAACQ,MAAM,EAAGO,SAAS,IAAK;MACvCT,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEQ,SAAS,CAAC,CAAC,CAAC;MAC9CV,oBAAoB,CAAC,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC;;IAEF;IACAP,SAAS,CAAC,MAAM;MACdQ,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC,CAAC,CAAC;MAChEF,oBAAoB,CAAC,CAAC;IACxB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}