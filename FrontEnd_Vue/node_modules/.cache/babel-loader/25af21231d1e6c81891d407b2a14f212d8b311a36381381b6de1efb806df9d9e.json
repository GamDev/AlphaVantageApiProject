{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from \"axios\";\nimport { Bar } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nexport default {\n  components: {\n    Bar\n  },\n  props: {\n    symbol: String // Stock symbol passed from parent component\n  },\n  setup(props) {\n    const chartData = ref(null);\n\n    // Function to fetch intraday data\n    async function fetchIntradayData() {\n      try {\n        const response = await axios.get(`http://localhost:3000/stocks/intraday?symbol=${props.symbol}&interval=60min`);\n        const options = {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              // Ensures the y-axis starts from zero\n              suggestedMin: Math.min(...response.data.map(item => item.close)) - 5,\n              // Adjust the minimum y-axis value to fit your data\n              suggestedMax: Math.max(...response.data.map(item => item.close)) + 5 // Adjust the maximum y-axis value\n            }\n          }\n        };\n        const formattedData = {\n          labels: response.data.map(item => item.timestamp),\n          // Extract timestamps\n          datasets: [{\n            label: \"Stock Price (60min Interval)\",\n            data: response.data.map(item => parseFloat(item.close)),\n            // Extract closing prices\n            backgroundColor: \"rgba(0,123,255,0.6)\"\n          }]\n        };\n        chartData.value = formattedData;\n      } catch (error) {\n        console.error(\"Error fetching intraday data:\", error);\n      }\n    }\n\n    // Watch for changes in the symbol prop and fetch new data\n    watch(() => props.symbol, newSymbol => {\n      fetchIntradayData();\n    });\n\n    // Fetch data when the component is mounted\n    onMounted(fetchIntradayData);\n    return {\n      chartData,\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","axios","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","register","components","props","symbol","String","setup","chartData","fetchIntradayData","response","get","options","responsive","scales","y","beginAtZero","suggestedMin","Math","min","data","map","item","close","suggestedMax","max","formattedData","labels","timestamp","datasets","label","parseFloat","backgroundColor","value","error","console","newSymbol","chartOptions","maintainAspectRatio"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockIntradayChart.vue"],"sourcesContent":["<template>\n    <div class=\"chart-container\">\n      <Bar v-if=\"chartData\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, watch } from \"vue\";\n  import axios from \"axios\";\n  import { Bar } from \"vue-chartjs\";\n  import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\n  \n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n  \n  export default {\n    components: { Bar },\n    props: {\n      symbol: String, // Stock symbol passed from parent component\n    },\n    setup(props) {\n      const chartData = ref(null);\n  \n      // Function to fetch intraday data\n      async function fetchIntradayData() {\n        try {\n          const response = await axios.get(`http://localhost:3000/stocks/intraday?symbol=${props.symbol}&interval=60min`);\n          const options = {\n  responsive: true,\n  scales: {\n    y: {\n      beginAtZero: true,  // Ensures the y-axis starts from zero\n      suggestedMin: Math.min(...response.data.map(item => item.close)) - 5,  // Adjust the minimum y-axis value to fit your data\n      suggestedMax: Math.max(...response.data.map(item => item.close)) + 5, // Adjust the maximum y-axis value\n    },\n  },\n};\n          const formattedData = {\n  labels: response.data.map(item => item.timestamp), // Extract timestamps\n  datasets: [\n    {\n      label: \"Stock Price (60min Interval)\",\n      data: response.data.map(item => parseFloat(item.close)), // Extract closing prices\n      backgroundColor: \"rgba(0,123,255,0.6)\",\n    },\n  ],\n};\n\n          chartData.value = formattedData;\n        } catch (error) {\n          console.error(\"Error fetching intraday data:\", error);\n        }\n      }\n  \n      // Watch for changes in the symbol prop and fetch new data\n      watch(() => props.symbol, (newSymbol) => {\n        fetchIntradayData();\n      });\n  \n      // Fetch data when the component is mounted\n      onMounted(fetchIntradayData);\n  \n      return {\n        chartData,\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .chart-container {\n    width: 100%;\n    max-width: 800px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";;AAOE,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAI,QAAS,KAAK;AAC3C,OAAOC,KAAI,MAAO,OAAO;AACzB,SAASC,GAAE,QAAS,aAAa;AACjC,SAASC,KAAI,IAAKC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAU,QAAS,UAAU;AAE3GN,OAAO,CAACO,QAAQ,CAACN,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,aAAa,EAAEC,WAAW,CAAC;AAEhF,eAAe;EACbE,UAAU,EAAE;IAAEV;EAAI,CAAC;EACnBW,KAAK,EAAE;IACLC,MAAM,EAAEC,MAAM,CAAE;EAClB,CAAC;EACDC,KAAKA,CAACH,KAAK,EAAE;IACX,MAAMI,SAAQ,GAAInB,GAAG,CAAC,IAAI,CAAC;;IAE3B;IACA,eAAeoB,iBAAiBA,CAAA,EAAG;MACjC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAC,gDAAgDP,KAAK,CAACC,MAAM,iBAAiB,CAAC;QAC/G,MAAMO,OAAM,GAAI;UACxBC,UAAU,EAAE,IAAI;UAChBC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cAAG;cACpBC,YAAY,EAAEC,IAAI,CAACC,GAAG,CAAC,GAAGT,QAAQ,CAACU,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC;cAAG;cACvEC,YAAY,EAAEN,IAAI,CAACO,GAAG,CAAC,GAAGf,QAAQ,CAACU,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAAE;YACxE;UACF;QACF,CAAC;QACS,MAAMG,aAAY,GAAI;UAC9BC,MAAM,EAAEjB,QAAQ,CAACU,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKA,IAAI,CAACM,SAAS,CAAC;UAAE;UACnDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,8BAA8B;YACrCV,IAAI,EAAEV,QAAQ,CAACU,IAAI,CAACC,GAAG,CAACC,IAAG,IAAKS,UAAU,CAACT,IAAI,CAACC,KAAK,CAAC,CAAC;YAAE;YACzDS,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC;QAESxB,SAAS,CAACyB,KAAI,GAAIP,aAAa;MACjC,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF;;IAEA;IACA3C,KAAK,CAAC,MAAMa,KAAK,CAACC,MAAM,EAAG+B,SAAS,IAAK;MACvC3B,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC;;IAEF;IACAnB,SAAS,CAACmB,iBAAiB,CAAC;IAE5B,OAAO;MACLD,SAAS;MACT6B,YAAY,EAAE;QACZxB,UAAU,EAAE,IAAI;QAChByB,mBAAmB,EAAE;MACvB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}