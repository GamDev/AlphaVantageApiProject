{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createVNode as _createVNode, resolveComponent as _resolveComponent, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"app-container\", $setup.theme])\n  }, [_createCommentVNode(\" Pass theme as a prop and listen for the event \"), _createVNode($setup[\"HeaderComponent\"], {\n    theme: $setup.theme,\n    onToggleTheme: $setup.toggleTheme\n  }, null, 8 /* PROPS */, [\"theme\"]), _createElementVNode(\"main\", _hoisted_1, [_createVNode(_component_router_view, {\n    theme: $setup.theme\n  }, null, 8 /* PROPS */, [\"theme\"])]), _createVNode($setup[\"FooterComponent\"])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","theme","_createCommentVNode","_createVNode","onToggleTheme","toggleTheme","_createElementVNode","_hoisted_1","_component_router_view"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\" :class=\"theme\">\n    <!-- Pass theme as a prop and listen for the event -->\n    <HeaderComponent :theme=\"theme\" @toggle-theme=\"toggleTheme\" />\n    <main class=\"content\">\n      <router-view :theme=\"theme\" />\n    </main>\n    <FooterComponent />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from \"vue\";\nimport HeaderComponent from \"./components/Header.vue\";\nimport FooterComponent from \"./components/Footer.vue\";\n\nconst theme = ref(getInitialTheme());\n\nfunction toggleTheme() {\n  if (theme.value === \"light-theme\") {\n    theme.value = \"dark-theme\";\n  } else if (theme.value === \"dark-theme\") {\n    theme.value = \"system-theme\";\n  } else {\n    theme.value = \"light-theme\";\n  }\n\n  if (theme.value === \"system-theme\") {\n    localStorage.removeItem(\"theme\");\n    applySystemTheme();\n  } else {\n    localStorage.setItem(\"theme\", theme.value);\n    document.documentElement.setAttribute(\"data-theme\", theme.value);\n  }\n}\n\nfunction getInitialTheme() {\n  const storedTheme = localStorage.getItem(\"theme\");\n  if (storedTheme) return storedTheme;\n  return \"system-theme\";\n}\n\nfunction applySystemTheme() {\n  const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  const systemTheme = prefersDark ? \"dark-theme\" : \"light-theme\";\n  document.documentElement.setAttribute(\"data-theme\", systemTheme);\n}\n\nfunction handleSystemThemeChange(event) {\n  if (theme.value === \"system-theme\") {\n    applySystemTheme();\n  }\n}\n\n// Watch for system theme changes\nonMounted(() => {\n  if (theme.value === \"system-theme\") {\n    applySystemTheme();\n  } else {\n    document.documentElement.setAttribute(\"data-theme\", theme.value);\n  }\n\n  window.matchMedia(\"(prefers-color-scheme: dark)\").addEventListener(\"change\", handleSystemThemeChange);\n});\n\nwatch(theme, (newTheme) => {\n  if (newTheme === \"system-theme\") {\n    applySystemTheme();\n  }\n});\n</script>\n\n<style>\n/* Define default (light) theme variables */\n:root {\n  --bg-color: #ffffff;\n  --text-color: #000000;\n  --header-bg: #f8f9fa;\n  --footer-bg: #f8f9fa;\n  --btn-bg: #007bff;\n  --btn-text: #ffffff;\n}\n\n/* Dark theme variables */\n[data-theme=\"dark-theme\"] {\n  --bg-color: #121212;\n  --text-color: #ffffff;\n  --header-bg: #212529;\n  --footer-bg: #212529;\n  --btn-bg: #ff9800;\n  --btn-text: #000000;\n}\n\n/* Apply global styles */\nbody {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  transition: background-color 0.3s, color 0.3s;\n}\n\n.header, .footer {\n  background-color: var(--header-bg);\n}\n\nbutton {\n  background-color: var(--btn-bg);\n  color: var(--btn-text);\n}\n\n/* Make the footer sticky */\n.app-container {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh; /* Full viewport height */\n}\n.content {\n  flex: 1; /* Pushes the footer down */\n}\n.footer {\n  width: 100%;\n  background-color: var(--footer-bg);\n  color: var(--text-color);\n  text-align: center;\n  padding: 10px 0;\n}\n</style>\n"],"mappings":";;EAIUA,KAAK,EAAC;AAAS;;;uBAHvBC,mBAAA,CAOM;IAPDD,KAAK,EADZE,eAAA,EACa,eAAe,EAASC,MAAA,CAAAC,KAAK;MACtCC,mBAAA,mDAAsD,EACtDC,YAAA,CAA8DH,MAAA;IAA5CC,KAAK,EAAED,MAAA,CAAAC,KAAK;IAAGG,aAAY,EAAEJ,MAAA,CAAAK;sCAC/CC,mBAAA,CAEO,QAFPC,UAEO,GADLJ,YAAA,CAA8BK,sBAAA;IAAhBP,KAAK,EAAED,MAAA,CAAAC;EAAK,mC,GAE5BE,YAAA,CAAmBH,MAAA,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}