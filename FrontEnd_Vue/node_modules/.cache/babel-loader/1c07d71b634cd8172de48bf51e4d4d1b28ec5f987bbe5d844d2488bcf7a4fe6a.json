{"ast":null,"code":"import axios from \"axios\";\nimport { ref, computed, onMounted } from \"vue\";\nexport default {\n  setup() {\n    const etfSymbol = \"QQQ\"; // Default ETF symbol (no user input)\n    const holdings = ref([]);\n    const currentPage = ref(1);\n    const itemsPerPage = 10; // Show 10 per page\n\n    // Fetch ETF Holdings\n    const fetchHoldings = async () => {\n      try {\n        console.log(\"Fetching data from API...\");\n        const response = await axios.get(`http://localhost:3000/stocks/etf-holdings?symbol=${etfSymbol}`);\n        console.log(\"API Response:\", response.data);\n        holdings.value = response.data.holdings || [];\n        currentPage.value = 1; // Reset to first page\n      } catch (error) {\n        console.error(\"Error fetching holdings:\", error);\n      }\n    };\n\n    // Fetch data automatically when component loads\n    onMounted(fetchHoldings);\n\n    // Pagination Computed Properties\n    // const totalPages = computed(() => Math.ceil(holdings.value.length / itemsPerPage));\n\n    // const paginatedHoldings = computed(() => {\n    //   const start = (currentPage.value - 1) * itemsPerPage;\n    //   return holdings.value.slice(start, start + itemsPerPage);\n    // });\n\n    // Pagination Methods\n    // const nextPage = () => {\n    //   if (currentPage.value < totalPages.value) {\n    //     currentPage.value++;\n    //   }\n    // };\n\n    // const prevPage = () => {\n    //   if (currentPage.value > 1) {\n    //     currentPage.value--;\n    //   }\n    // };\n\n    // View Stock Details (Route to Another Page)\n    // const viewStockDetails = (symbol) => {\n    //   window.location.href = `/stock/${symbol}`; // Replace with Vue Router if needed\n    // };\n\n    return {\n      holdings,\n      paginatedHoldings,\n      currentPage,\n      totalPages,\n      nextPage,\n      prevPage,\n      viewStockDetails\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","computed","onMounted","setup","etfSymbol","holdings","currentPage","itemsPerPage","fetchHoldings","console","log","response","get","data","value","error","paginatedHoldings","totalPages","nextPage","prevPage","viewStockDetails"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-4\">\n    <h2 class=\"text-center mb-4\">Stock Dashboard</h2>\n\n    <!-- Stock Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Description</th>\n            <th>Weight (%)</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"holding in paginatedHoldings\" :key=\"holding.symbol\">\n    <td>{{ holding.symbol }}</td>\n    <td>{{ holding.description }}</td>\n    <td>{{ parseFloat(holding.weight).toFixed(2) }}%</td>\n    <td :class=\"getChangeClass(holding.weight)\">\n      {{ parseFloat(holding.weight).toFixed(2) }}%\n    </td>\n    <td>\n      <button @click=\"viewStockDetails(holding.symbol)\" class=\"btn btn-primary\">\n        View Details\n      </button>\n    </td>\n  </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Pagination Controls -->\n    <!-- <div class=\"pagination\">\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"btn btn-secondary\">Previous</button>\n      <span>Page {{ currentPage }} of {{ totalPages }}</span>\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"btn btn-secondary\">Next</button>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { ref, computed, onMounted } from \"vue\";\n\nexport default {\n  setup() {\n    const etfSymbol = \"QQQ\"; // Default ETF symbol (no user input)\n    const holdings = ref([]);\n    const currentPage = ref(1);\n    const itemsPerPage = 10; // Show 10 per page\n\n    // Fetch ETF Holdings\n    const fetchHoldings = async () => {\n      try {\n        console.log(\"Fetching data from API...\");\n        const response = await axios.get(`http://localhost:3000/stocks/etf-holdings?symbol=${etfSymbol}`);\n        console.log(\"API Response:\", response.data);\n        holdings.value = response.data.holdings || [];\n        currentPage.value = 1; // Reset to first page\n      } catch (error) {\n        console.error(\"Error fetching holdings:\", error);\n      }\n    };\n\n    // Fetch data automatically when component loads\n    onMounted(fetchHoldings);\n\n    // Pagination Computed Properties\n    // const totalPages = computed(() => Math.ceil(holdings.value.length / itemsPerPage));\n\n    // const paginatedHoldings = computed(() => {\n    //   const start = (currentPage.value - 1) * itemsPerPage;\n    //   return holdings.value.slice(start, start + itemsPerPage);\n    // });\n\n    // Pagination Methods\n    // const nextPage = () => {\n    //   if (currentPage.value < totalPages.value) {\n    //     currentPage.value++;\n    //   }\n    // };\n\n    // const prevPage = () => {\n    //   if (currentPage.value > 1) {\n    //     currentPage.value--;\n    //   }\n   // };\n\n    // View Stock Details (Route to Another Page)\n    // const viewStockDetails = (symbol) => {\n    //   window.location.href = `/stock/${symbol}`; // Replace with Vue Router if needed\n    // };\n\n    return {\n      holdings,\n      paginatedHoldings,\n      currentPage,\n      totalPages,\n      nextPage,\n      prevPage,\n      viewStockDetails,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.table {\n  text-align: center;\n  background: var(--bg-color);\n  color: var(--text-color);\n}\n\n.btn-primary {\n  background-color: var(--btn-bg);\n  color: var(--btn-text);\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"AA2CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAI,KAAK,EAAE;IACzB,MAAMC,QAAO,GAAIL,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMM,WAAU,GAAIN,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMO,YAAW,GAAI,EAAE,EAAE;;IAEzB;IACA,MAAMC,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,oDAAoDR,SAAS,EAAE,CAAC;QACjGK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAC3CR,QAAQ,CAACS,KAAI,GAAIH,QAAQ,CAACE,IAAI,CAACR,QAAO,IAAK,EAAE;QAC7CC,WAAW,CAACQ,KAAI,GAAI,CAAC,EAAE;MACzB,EAAE,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACAb,SAAS,CAACM,aAAa,CAAC;;IAExB;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACD;;IAEC;IACA;IACA;IACA;;IAEA,OAAO;MACLH,QAAQ;MACRW,iBAAiB;MACjBV,WAAW;MACXW,UAAU;MACVC,QAAQ;MACRC,QAAQ;MACRC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}