{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Bar = _resolveComponent(\"Bar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.chartData ? (_openBlock(), _createBlock(_component_Bar, {\n    key: 0,\n    data: $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$setup","chartData","_createBlock","_component_Bar","key","data","options","chartOptions","_createCommentVNode"],"sources":["/Users/attiqrehman/Documents/StockInfoSystem_FrontEnd/frontend/src/components/StockIntradayChart.vue"],"sourcesContent":["<template>\n    <div class=\"chart-container\">\n      <Bar v-if=\"chartData\" :data=\"chartData\" :options=\"chartOptions\" />\n    </div>\n  </template>\n  \n  <script>\n  import { ref, onMounted, watch } from \"vue\";\n  import axios from \"axios\";\n  import { Bar } from \"vue-chartjs\";\n  import { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from \"chart.js\";\n  \n  ChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n  \n  export default {\n    components: { Bar },\n    props: {\n      symbol: String, // Stock symbol passed from parent component\n    },\n    setup(props) {\n      const chartData = ref(null);\n  \n      // Function to fetch intraday data\n      async function fetchIntradayData() {\n        try {\n          const response = await axios.get(`http://localhost:3000/stocks/intraday?symbol=${props.symbol}&interval=60min`);\n          const formattedData = {\n  labels: response.data.map(item => item.timestamp), // Extract timestamps\n  datasets: [\n    {\n      label: \"Stock Price (60min Interval)\",\n      data: response.data.map(item => parseFloat(item.close)), // Extract closing prices\n      backgroundColor: \"rgba(0,123,255,0.6)\",\n    },\n  ],\n};\n\n          chartData.value = formattedData;\n        } catch (error) {\n          console.error(\"Error fetching intraday data:\", error);\n        }\n      }\n  \n      // Watch for changes in the symbol prop and fetch new data\n      watch(() => props.symbol, (newSymbol) => {\n        fetchIntradayData();\n      });\n  \n      // Fetch data when the component is mounted\n      onMounted(fetchIntradayData);\n  \n      return {\n        chartData,\n        chartOptions: {\n          responsive: true,\n          maintainAspectRatio: false,\n        },\n      };\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .chart-container {\n    width: 100%;\n    max-width: 600px;\n    margin: auto;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;;uBAA5BC,mBAAA,CAEM,OAFNC,UAEM,GADOC,MAAA,CAAAC,SAAS,I,cAApBC,YAAA,CAAkEC,cAAA;IAFxEC,GAAA;IAE6BC,IAAI,EAAEL,MAAA,CAAAC,SAAS;IAAGK,OAAO,EAAEN,MAAA,CAAAO;kDAFxDC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}